{
	"info": {
		"_postman_id": "62320803-99f3-4e97-851a-0516d511364f",
		"name": "SW_Dev",
		"description": "Backend API for booking interview session timeslots, including companies, users, and bookings.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33734274"
	},
	"item": [
		{
			"name": "User Flow",
			"item": [
				{
					"name": "Authentication Copy",
					"item": [
						{
							"name": "Register Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain email validation error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"msg\");\r",
											"    pm.expect(jsonData.msg).to.include(\"Please add a valid email\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Register Invalid Name\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"invalid.com\",\r\n  \"password\": \"securepass1234\",\r\n  \"tel\": \"0111111111\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/register",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Invalid Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain name validation error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"msg\");\r",
											"    pm.expect(jsonData.msg).to.include(\"Please add a valid name\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Register Invalid Tel\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"123invalid\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"securepass1234\",\r\n  \"tel\": \"0111111111\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/register",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Invalid Tel",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain telephone number validation error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"msg\");\r",
											"    pm.expect(jsonData.msg).to.include(\"Please add a valid telephone number\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Register User\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"securepass1234\",\r\n  \"tel\": \"1111111111\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/register",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"const new_user_id = response._id\r",
											"const new_user_email = response.email\r",
											"\r",
											"pm.globals.set(\"global_user_id\", new_user_id)\r",
											"pm.globals.set(\"global_user_email\", new_user_email)\r",
											"pm.globals.set(\"global_user_password\", \"securepass1234\")\r",
											"\r",
											"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
											"\r",
											"pm.execution.setNextRequest(\"Login\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFullName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"securepass1234\",\r\n  \"tel\": \"0111111111\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/register",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
											"\r",
											"pm.execution.setNextRequest(\"Get All Companies\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{global_user_email}}\",\r\n    \"password\": \"{{global_user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"TOKEN\", null)\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Admin Login\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/auth/logout",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"logout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Companies Copy",
					"item": [
						{
							"name": "Get All Companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"\r",
											"pm.test(\"There are some companies!!\", () => {\r",
											"    pm.expect(response.count).to.be.above(0)\r",
											"})\r",
											"\r",
											"const first_company = response.data[0]._id\r",
											"const second_company = response.data[1]._id\r",
											"const third_company = response.data[2]._id\r",
											"\r",
											"pm.globals.set(\"global_first_company\", first_company)\r",
											"pm.globals.set(\"global_second_company\", second_company)\r",
											"pm.globals.set(\"global_third_company\", third_company)\r",
											"\r",
											"pm.execution.setNextRequest(\"Add Invalid Format Date\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/companies",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies"
									]
								},
								"description": "Fetch all hospitals from database."
							},
							"response": []
						}
					],
					"description": "Hospital CRUD functionality"
				},
				{
					"name": "Bookings Copy",
					"item": [
						{
							"name": "Add Invalid Format Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date format error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"msg\");\r",
											"    pm.expect(jsonData.msg).to.include(\"Invalid apptDate format\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Add Too Early Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-0T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_first_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Too Early Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date range error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData.message)\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"Booking must be scheduled between May 10–13, 2022\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Add Too Late Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-08T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_first_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Too Late Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date range error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"Booking must be scheduled between May 10–13, 2022\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Add First Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-14T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_first_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add First Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"pm.globals.set(\"global_first_booking\", response.data._id)\r",
											"\r",
											"pm.execution.setNextRequest(\"Add Second Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-10T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_first_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Second Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"pm.globals.set(\"global_second_booking\", response.data._id)\r",
											"\r",
											"pm.execution.setNextRequest(\"Add Third Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-10T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_second_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Third Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"pm.globals.set(\"global_third_booking\", response.data._id)\r",
											"\r",
											"pm.execution.setNextRequest(\"Add More Than 3 Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-10T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_third_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add More Than 3 Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain an error message saying this user has already made 3 bookings\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"has already made 3 bookings\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Get All Bookings\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-10T00:00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/companies/:company_id/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"companies",
										":company_id",
										"bookings"
									],
									"variable": [
										{
											"key": "company_id",
											"value": "{{global_third_company}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Get ONE Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get ONE Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Invalid Update Company in Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Update Company in Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid update input error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"Only apptDate can be updated\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Update Invalid Format Date\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-11T17:00:00.000+00:00\",\r\n    \"company\": \"{{global_first_company}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Invalid Format Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date format error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"msg\");\r",
											"    pm.expect(jsonData.msg).to.include(\"Invalid apptDate format\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Update Too Early Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-T17:00:00.000+00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Too Early Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date range error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"Booking must be scheduled between May 10–13, 2022\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Update Too Late Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-01T17:00:00.000+00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Too Late Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Should contain invalid date range error message\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"message\");\r",
											"    pm.expect(jsonData.message).to.include(\"Booking must be scheduled between May 10–13, 2022\");\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Update ONE Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-30T17:00:00.000+00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update ONE Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Delete ONE Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-11T17:00:00.000+00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete ONE Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Logout\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{global_first_booking}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Admin Flow",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"TOKEN\", pm.response.json().token)\r",
											"\r",
											"pm.execution.setNextRequest(\"Admin View Bookings\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@sample.com\",\r\n    \"password\": \"{{global_user_password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Bookings",
					"item": [
						{
							"name": "Admin View Bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json()\r",
											"\r",
											"pm.test(\"The number of current bookings in the system should be more than 0\", function () {\r",
											"    pm.expect(response.count).to.be.above(0)\r",
											"})\r",
											"\r",
											"const found_booking_1 = response.data[0]._id\r",
											"const found_booking_2 = response.data[1]._id\r",
											"\r",
											"pm.globals.set(\"admin_found_booking_1\", found_booking_1)\r",
											"pm.globals.set(\"admin_found_booking_2\", found_booking_2)\r",
											"\r",
											"pm.execution.setNextRequest(\"Admin View ONE Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin View ONE Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Admin Edit Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{admin_found_booking_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin Edit Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"Admin Delete Booking\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2022-05-11T17:00:00.000+00:00\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{admin_found_booking_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin Delete Booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.execution.setNextRequest(\"null\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:bookingId",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":bookingId"
									],
									"variable": [
										{
											"key": "bookingId",
											"value": "{{admin_found_booking_1}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}